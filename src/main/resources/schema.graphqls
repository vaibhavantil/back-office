schema {
    query: QueryType
    mutation: MutationType
}

type QueryType {
    getMonthlyPayments(month: YearMonth!): [MonthlySubscription]
    getMember(id: ID!): Member
    getClaim(id: ID!): Claim
}

type MutationType {
    chargeMember(id: ID!, amount: MonetaryAmount!): Member
}

type MonthlySubscription {
    amount: MonetaryAmount
    member: Member
}

type Member {
    memberId: ID
    firstName: String
    lastName: String
    transactions: [Transaction]
    directDebitStatus: DirectDebitStatus
    monthlySubscription(month: YearMonth!): MonthlySubscription
}

type Transaction {
    id: ID
    amount: MonetaryAmount
    timestamp: Instant
    type: String
    status: String
}

type DirectDebitStatus {
    activated: Boolean
}

type Claim {
  id: ID
  member: Member
  recordingUrl: String
  state: ClaimState
  type: String
  reserves: MonetaryAmount
  registrationDate: ZonedDateTime
  notes: [ClaimNote]
  payments: [ClaimPayment]
  events: [ClaimEvent]
}

type ClaimNote {
  text: String
  url: String
}

type ClaimPayment {
  amount: MonetaryAmount
  note: String
  type: String
  transaction: Transaction
}

type ClaimEvent {
  text: String
  date: ZonedDateTime
}

enum ClaimState {
  OPEN
  CLOSED
  REOPENED
}

# A String-representation of `java.time.YearMonth`. ex: `"2018-06"`
scalar YearMonth
# An object-representation of `javax.money.MonetaryAmount`. ex: `{"amount": 100,  "currency": "SEK"}`
scalar MonetaryAmount
# An epoch-representation of `java.time.Instant`. ex: `1531914777`
scalar Instant
# A String-representation of `java.time.ZonedDateTime`, ex: `"2018-09-21T14:17:46.536405+02:00[Europe/Stockholm]"`
scalar ZonedDateTime
