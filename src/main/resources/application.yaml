server:
  port: 8443
  httpPort: 8080
  session:
    cookie:
      max-age: 3600
      http-only: true
      secure: true
  servlet:
    session:
      timeout: 7200s

logging:
  level:
    com:
      hedvig: DEBUG

  http:
    multipart:
      max-file-size: 16MB
      max-request-size: 16MB
  cloud:
    config:
      allow-override: false

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

feign:
  hystrix:
    enabled: false

hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: false

intervals:
  tracker: 5000
  chat: 1000
  claims: 60000

websocket:
  max-sile-size: 5242880

tracker:
  baseUrl: http://localhost:4082
  urls:
    assets: /assets
    update: /asset
  stub: false

hopeAutocompleteService:
  baseUrl: http://localhost:5000
  stub: true

autoAnswerSuggestionService:
  baseUrl: http://localhost:5001
  stub: false

botservice:
  baseUrl: http://localhost:4081
  questionId: main.question
  stub: false

memberservice:
  baseUrl: http://localhost:4084
  stub: false

claims:
  baseUrl: http://localhost:4083
  stub: false

productPricing:
  baseUrl: http://localhost:4085
  stub: false

underwriter:
  baseUrl: http://localhost:5698
  stub: false

paymentService:
  baseUrl: http://localhost:8086
  stub: false

meerkat:
  baseUrl: http://localhost:4123
  stub: false

accountService:
  baseUrl: http://localhost:8090
  stub: false

itemPricingService:
  baseUrl: http://localhost:5050
  stub: false

tickets:
  baseUrl: http://localhost:8088
  stub: false

gatekeeper:
  baseUrl: http://localhost:8040
  stub: false

security:
  basic:
    enabled: false
  oauth2:
    client:
      clientId: GatekeeperApplication
      clientSecret: secret
      accessTokenUri: http://localhost:8040/oauth2/token
      userAuthorizationUri: http://localhost:8040/oauth2/authorize
      scope: profile, email
    resource:
      userInfoUri: http://localhost:8081/oauth2/tokeninfo

graphql:
  servlet:
    mapping: /api/graphql
    enabled: true
    corsEnabled: false

graphiql:
  mapping: /graphiql
  endpoint: /api/graphql
  enabled: true
  pageTitle: BackOffice GraphiQL


spring:
  jackson:
    serialization:
      write_dates_as_timestamps: false
  thymeleaf:
    cache: false

cloud:
  aws:
    credentials.useDefaultAwsCredentialsChain: true
